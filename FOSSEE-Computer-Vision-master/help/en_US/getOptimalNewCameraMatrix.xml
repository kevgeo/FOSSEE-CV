<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from getOptimalNewCameraMatrix.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="getOptimalNewCameraMatrix" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>getOptimalNewCameraMatrix</refname>
    <refpurpose>Returns a new optimal camera matrix</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   new_cameraMatrix = getOptimalNewCameraMatrix(cameraMatrix,distCoeffs,imageSize_width,imageSize_height,alpha,
   new_imageSize_width,new_imageSize_height,CenterPrincipalPoint);
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>cameraMatrix :</term>
      <listitem><para> original camera matrix</para></listitem></varlistentry>
   <varlistentry><term>distCoeffs :</term>
      <listitem><para> vector of distortion coefficients</para></listitem></varlistentry>
   <varlistentry><term>imageSize(width,cols) :</term>
      <listitem><para> size of image in pixels</para></listitem></varlistentry>
   <varlistentry><term>alpha :</term>
      <listitem><para> free scaling parameter between 0 and 1</para></listitem></varlistentry>
   <varlistentry><term>new_imageSize(new_width,new_cols) :</term>
      <listitem><para> New size after correction. By default, it is set to original image size</para></listitem></varlistentry>
   <varlistentry><term>CenterPrincipalPoint :</term>
      <listitem><para> Optional flag specifying whether the principal point should be at the image</para></listitem></varlistentry>
   <varlistentry><term>new_cameraMatrix :</term>
      <listitem><para> Optimal camera matrix(output)</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
The function takes as input the original camera matrix and array of distortion coefficients to return a new optimal camera matrix.
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
a = [144.00 1011.0;
237.0 801.0;
242.0 583.0;
271.0 421.0];
imagePoints = list(a)
b = [18.0 18.0 0;
25.0 110.0 0;
26.0 226.0 0;
29.0 327.0 0];
objectPoints = list(b)
cameraMatrix = initCameraMatrix2D(1,objectPoints,imagePoints,1280,1024,0);
dist = [0
0
0
0];
new_cameraMatrix = getOptimalNewCameraMatrix(cameraMatrix,dist,1280,1024,0.3,1280,1024,0);

Author
Kevin George
   ]]></programlisting>
</refsection>
</refentry>
