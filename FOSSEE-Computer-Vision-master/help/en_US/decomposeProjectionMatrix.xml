<?xml version="1.0" encoding="UTF-8"?>

<!--
 *
 * This help file was generated from decomposeProjectionMatrix.sci using help_from_sci().
 *
 -->

<refentry version="5.0-subset Scilab" xml:id="decomposeProjectionMatrix" xml:lang="en"
          xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:svg="http://www.w3.org/2000/svg"
          xmlns:ns3="http://www.w3.org/1999/xhtml"
          xmlns:mml="http://www.w3.org/1998/Math/MathML"
          xmlns:scilab="http://www.scilab.org"
          xmlns:db="http://docbook.org/ns/docbook">

  <refnamediv>
    <refname>decomposeProjectionMatrix</refname>
    <refpurpose>Decomposes a projection matrix into a camera matrix and a rotation matrix.</refpurpose>
  </refnamediv>


<refsynopsisdiv>
   <title>Calling Sequence</title>
   <synopsis>
   [cam rot trans rotX rotY rotZ euler] = decomposeProjectionMatrix(projMatrix);
   
   </synopsis>
</refsynopsisdiv>

<refsection>
   <title>Parameters</title>
   <variablelist>
   <varlistentry><term>projMatrix :</term>
      <listitem><para> 3x4 Projection matrix</para></listitem></varlistentry>
   <varlistentry><term>cam :</term>
      <listitem><para> 3x3 Camera matrix</para></listitem></varlistentry>
   <varlistentry><term>rot :</term>
      <listitem><para> 3x3 Rotation matrix</para></listitem></varlistentry>
   <varlistentry><term>trans :</term>
      <listitem><para> 4x1 Translation vector</para></listitem></varlistentry>
   <varlistentry><term>rotX(optional) :</term>
      <listitem><para> 3x3 Rotation matrix around x axis</para></listitem></varlistentry>
   <varlistentry><term>rotY(optional) :</term>
      <listitem><para> 3x3 Rotation matrix around y axis</para></listitem></varlistentry>
   <varlistentry><term>rotZ(optional) :</term>
      <listitem><para> 3x3 Rotation matrix around z axis</para></listitem></varlistentry>
   <varlistentry><term>euler :</term>
      <listitem><para> contains three euler angles of rotation in degrees</para></listitem></varlistentry>
   </variablelist>
</refsection>

<refsection>
   <title>Description</title>
   <para>
The function decomposes a projection matrix that returns a camera matrix, rotation matrix and calibratiion matrix.
It optionally returns rotation matrices around the 3 axes and euler angle.
   </para>
   <para>
</para>
</refsection>

<refsection>
   <title>Examples</title>
   <programlisting role="example"><![CDATA[
projMatrix =[ 1 0 5 1
0 1 4 2;
0 0 1 3];
[cam rot trans rotX rotY rotZ euler] = decomposeProjectionMatrix(inpt);

Author
Kevin George
   ]]></programlisting>
</refsection>
</refentry>
